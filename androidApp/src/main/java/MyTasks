+ Ограничение данных на графике по временному диапозону
+ Цвета в графике
+ Автозагрузку данных на графике
+ Загрузка уставок
+ Привязка уставок к параметрам показаний
+ Отображение уставок на графике
+ Сделать класс для работы с сохраненными параметрами
+ Отключить поворот экрана
+ Отображать кол-во уставок применяемых к параметру
+ Исправить подключение при повторном открытии формы подключения
+ Сделать по нажатию кнопки back вопрос о выходе
+ Цвета датчиков на графике поправить
+ Переделать потоки на корутины
+ Переключение между графиками на активности графика
+ Добавить дискретные датчики
+ Отображать дерево пути силосов
+ Отображать хинт по выбору точки на графике
+ Убрать возможность запуска двух одинаковых потоков в фоне
+ Писать о выполнении попыток подключения на главном экране
+ Автообновлять данные на графике
+ Автообновление состояний подвесок, силосов
+ Отображать аварийность на силосах
+ Сделать отображение диаграммой
+ Поправить загрузку структуры
+ Добавить ввод названия базы данных
+ Выводить в уведомления перечени сработавших по темперауре и по уровню
+ Сдвинуть мешающие маркеры графиков(удалил)
+ Сделать разные хинты на температуру и уровень на графике
+ Сбрасывать последние состояния параметров при отключении опроса
+- Прилизать чтение параметров
+ Исправить открытие двух активностей одновременно
- Установить предел по масштабированию графика(Нашел только обратный предел)
- Сохранение нескольких параметров апвтоподключения
- Работа с несколькими системами
+ Ускорить чтение сосояний, уменьшив количество запросов
- Динамическое изменение диапозона значений темп на графике
- Сделать отображение дискетных датчиков в виде полосы-светофора
- Указывать тип ошибки при подключении
- Smart Lock сохранение паролей
- шифроваться с помощью протокола стандарта TLS, например HTTPS.
- LimitLine сделать выше диаграммы
- Убрать "дождитесь окончания подключения"
- Можно сделать попытку установить подключение одновременно в разных потоках
- Определиться с количеством попыток подключения
- Отлавливать нет доступа к сети

+ Скрывать дис датчики в температуре.
+ Убрать кнопки датчиков на SwitchButton.
- Проверить корректность цветов состояний на полосе датиков.
+ Убрать масштабиование, рамку и фон у полос датчиков. Увелишить высоту.
- Добавить Marker полосам датчикам, отображать там состояние и промежуток времени.
- Определять размеры промежутков и красить большие в серый.
- Рядом с полосами датчиков отображать иконку направления.
- Сделать наследование для графиков. Иначе путаются классы для диаграммы температур и диаграммы датчиков.


За 2 часа 8 запросов, 23кб - это много

// "jdbc:mysql://192.168.0.140:3306/?serverTimezone=UTC"
// "jdbc:mysql://db4free.net:3306/tmonitor?serverTimezone=UTC"
tmonitor
mememe
724f23c7
db4free.net
3306

Разнаца поля и свойства
try() с ресурсами это - ...
принимает объект реализующий интерфейс AutoClosable
Разница абстрактного классса и интерфейса (В интерфейсе нет реализации конструктора)
интерфейс не может содержать переменных экземпляров(что это значит?)
CodeConvention(Конвенция)

сервлет jsp страницы
Дз:
Kotlin иерархия исключений (в котлин нет Checked сть nchecked только)
https://javarush.ru/groups/posts/vidy-vlozhennyh-klassov
Они пишут веб сервисы So Rest

Топ: сделать тесты на JUnit

использовать data class
sealed class закрытая иерархия. Нельзя наследоваться в других мктсах. when знает все
наследники

делегирование это типа наследования но для закрытых классов оно создает новый класс,
дополняющий свойтсва делегируемого. делегируемый приходит как параметр, приходится реализовать
интерфейсы, реализуемые делегатом. Индивидуальные поля методы не наследуются.

синглтон это object

adb tcpip 5555
adb connect 192.168.0.105:5555
adb devices
pause


Когда я получаю время с базы данных оно корректируется, если &useLegacyDatetimeCode=false&serverTimezone=UTC
КОгда пишу время в запросе оно берется по часовому поясу сервера, со сдвигом для меня